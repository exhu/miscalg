= vidcliptui

TODO

* Consider using clap (or picoargs) and ratatui for tui

== Features

Planned features:

* Run mpv in ipc mode, render timeline in the console, react to file seek, pause, time events
from user activities in the mpv window.

* Render timeline with user marks.

* Allow to control mpv playback via vim-like keys, set marks, start loops to
replay those marks.

* Export marks to a file.

* Generate ffmpeg command to cut the video file into clips:
  * non-destructively
  * via user settings (guided options to exclude audio, resize etc.)

* Crop preview

* Dynamic crop (https://ffmpeg.org/ffmpeg-filters.html#sendcmd_002c-asendcmd)

== Controls

* ? - help
* q - exit
* space - play/pause
* hl - move timeline by default step (1/fps seconds or custom),
  picture update is sent once a second, and not updated until mpv responds,
  or after the key is released.
* {float}[hl] - jump {float} default steps
* {float}[jk] - jump {float} seconds
* {float}[{}] jump by {float} minutes
* {float}[()] jump by {float} 15 seconds
* {[h:m:]s}g - jump to time
* m{a-z} - set a mark at cursor position.
* '{a-z} - jump to a mark
* {float}s - set default jump step in seconds
* ds - set default jump step
* dl - clear loop (set to loop the whole file)
* l{a-z}{a-z} - set loop marks
* ww - write json with marks
* a{a-z} - annotate mark (for easy reference later) 
* wl - run default ffmpeg command for the current loop

== Files

Requires at least one argument -- video file. Optionally a json marks file.

At exit asks to save marks to a file, if there are unsaved changes.

Asks to type in marks file name if it was not passed via arguments, asks
permission to overwrite, or a new file name.

== Display

* file name, json file name (with marks)
* duration
* fps
* default step
* current position
* playing state
* marks with annotations (if doesn't fit the display, then scrolled according to current play
position.
* status line (displays "Press ? for help.")

